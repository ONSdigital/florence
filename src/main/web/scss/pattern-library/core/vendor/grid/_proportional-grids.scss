// PROPORTIONAL GRIDS
// Based on http://builtbyboon.com/posed/Proportional-Grids/

// SETTINGS
// Can be overridden by project-specific settings

// this is the fixed gutter between columns
$grid-gutter: 25px !default;
$oldie-grid-gutter: 2% !default;

// this sets your class names
$namespace: "grid" !default;
$grid-wrap-class: "-wrap";
$grid-col-class: "-col";

// Columns
// See _settings.scss for the full grid config - this file only ships with halves
$grid-columns: full-width 1, one-half 1/2!default;

$old-ie: null !default;

$push-pull: false !default;
$offset: false !default;

//-------------------------------------------------------
// GRID MIXINS
//-------------------------------------------------------
@mixin set-gutter($gutter) {

  margin-left: -$gutter;

  > .#{$namespace}#{$grid-col-class} {
    padding-left: $gutter;
  }
}

@mixin grid-config($namespace) {

  .#{$namespace}#{$grid-wrap-class} {
    margin-left: -$grid-gutter; // the same as your gutter
    clear: both;

    &:before,
    &:after {
      display: table; /* 2 */
      content: " "; /* 1 */
    }

    &:after {
      clear: both;
    }

    .lt-ie8 & {
      margin-left: 0;
    }
  }

  .#{$namespace}#{$grid-col-class} {
    float: left;
    clear: none;
    padding-left: $grid-gutter; // the gutter between columns
    width: 100%;
    position: relative; // for push/pull

    .lt-ie8 & {
      padding-left: $oldie-grid-gutter;
    }
  }
}

// the ability to remove the gutter immediately
.no-gutter {
  @include set-gutter(0);
}



// create all grid classes for a given proportion
// $class-name will be the class used in markup, $proportion is the fluid proportion
@mixin grid-class-setup($class-name, $proportion, $prefix: $namespace) {

  // Column
  .#{$prefix}-#{$class-name},
  .#{$prefix}-set-#{$class-name} .#{$prefix}#{$grid-col-class} {
    width: $proportion;

    .lt-ie8 & {
      width: floor($proportion) - $oldie-grid-gutter - 0.25%; // Extra 0.25% fudge factor so that it doesn't add up to 100%
    }
  }

  @if $offset == true {
    // Offset
    .#{$prefix}-offset-#{$class-name} {
      @if $proportion != floor($proportion) {
        margin-left: $proportion;
        .lt-ie8 & {
          margin-left: floor($proportion);
        }
      } @else {
        &,
        .lt-ie8 & {
          margin-left: $proportion;
        }
      }
    }
  }

  // Push/pull
  @if $push-pull == true {
    .#{$prefix}-push-#{$class-name} {
      @if $proportion != floor($proportion) {
        left: $proportion;
        .lt-ie8 & {
          left: floor($proportion);
        }
      } @else {
        &,
        .lt-ie8 & {
          left: $proportion;
        }
      }
    }
    .#{$prefix}-pull-#{$class-name} {
      @if $proportion != floor($proportion) {
        left: -$proportion;
        .lt-ie8 & {
          left: -#{floor($proportion)};
        }
      } @else {
        &,
        .lt-ie8 & {
          left: -$proportion;
        }
      }
    }
  }

}

// set the proportions you want to use
// $namespace relates to the class prefix e.g. bp2-col to target breakpoint 2
@mixin grid-setup($namespace) {
  @each $grid-column in $grid-columns {
    @include grid-class-setup(nth($grid-column, 1), nth($grid-column, 2) * 100%, $namespace);
  }
}

// include grids-init to set up your grids with your base class
// i.e. @include grids-init("col");
@mixin grids-init($class) {
  @include grid-config($class);
  @include grid-setup($class);
}

// @TODO: This is ugly and should be fixed. Or our grid system replaced.
@media screen and (min-width: $bp-tablet) and (max-width: ($bp-desktop -(1/16))) {
  .tablet-grid-clear {
    clear: both !important;
  }
}
