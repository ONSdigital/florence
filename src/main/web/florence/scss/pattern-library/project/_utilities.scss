/*
 * These classes use !important as they're trumps.
 * e.g. if you use them, you always want them to override any other style on
 * its element. Your specificity should be low, regardless
 * but even source order could override these otherwise.
 */

.flush {
  margin: 0 !important;
}

.flush--top {
  margin-top: 0 !important;
}

.flush--bottom {
  margin-bottom: 0 !important;
}

.flush--half {
  margin: .33em !important;
}

.flush--half--top {
  margin-top: .33em !important;
}

.flush--half--bottom {
  margin-bottom: .33em !important;
}

.flush--half--vertical {
  margin-top: .33em !important;
  margin-bottom: .33em !important;
}

.flush--third {
  margin: .66em !important;
}

.flush--third--top {
  margin-top: .66em !important;
}

.flush--third--bottom {
  margin-bottom: .66em !important;
}

.flush--third--vertical {
  margin-top: .66em !important;
  margin-bottom: .66em !important;
}

.line-tight {
  line-height: 1 !important;
}

.line-semi-tight {
  line-height: 1.25 !important;
}

.hide-large {
  @include respond-min($bp-desktop) {
    display: none !important;
  }
}

.hide-med {
  @include respond-min($bp-tablet) {
    display: none !important;
  }

  @include respond-max($bp-desktop-max) {
    display: none !important;
  }
}

.hide-small {
  @include respond-max($bp-tablet) {
    display: none !important;
  }
}

.hide-med-down {
  @include respond-max($bp-desktop-max) {
    display: none !important;
  }
}

.hide-med-up {
  @include respond-min($bp-tablet) {
    display: none !important;
  }
}

.no-js .nojs-hidden {
  display: none !important;
}

.js .js-hidden {
  display: none !important;
}

.visuallyhidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  border: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
}

// Use when restricting the length of the content due to readability concerns.
.max-read-length {
  max-width: 33em;
}
